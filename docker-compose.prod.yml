# Run the core OSMT service (backend and frontend) and Redis on a webserver with
# Let's Encrypt SSL certificate
# Depends on a hosted MySQL database and Elasticsearch

version: '3.3'
services:
  app:
    image: "ottonomy/osmt-app:${OSMT_APP_IMAGE_TAG:-latest}"
    volumes:
      - ./import:/opt/osmt/import:ro
      - ./whitelabel:/opt/osmt/whitelabel:ro
    environment:
      - "ENVIRONMENT=${ENVIRONMENT:-dev,apiserver,oauth2-okta}"
      - "BASE_DOMAIN=${BASE_DOMAIN}"
      - "FRONTEND_URL=${FRONTEND_URL}"
      - "DB_NAME=${DB_NAME}"
      - "DB_USER=${DB_USER}"
      - "DB_PASSWORD=${DB_PASSWORD}"
      - "DB_URI=${DB_USER}:${DB_PASSWORD}@${DB_HOST}:${DB_PORT}"
      - "MIGRATIONS_ENABLED=${MIGRATIONS_ENABLED:-true}"
      - "REINDEX_ELASTICSEARCH=${REINDEX_ELASTICSEARCH:-true}"
      - "SKIP_METADATA_IMPORT=${SKIP_METADATA_IMPORT:-false}"
      - "ELASTICSEARCH_URI=${ELASTICSEARCH_URI}"
      - "REDIS_URI=${REDIS_URI}"
      - "OAUTH_ISSUER=${OAUTH_ISSUER}"
      - "OAUTH_CLIENTID=${OAUTH_CLIENTID}"
      - "OAUTH_CLIENTSECRET=${OAUTH_CLIENTSECRET}"
      - "OAUTH_AUDIENCE=${OAUTH_AUDIENCE}"
      - "VIRTUAL_HOST=${BASE_DOMAIN}"
      - "LETSENCRYPT_HOST=${BASE_DOMAIN}"
    depends_on:
      - redis
    ports:
      - 8080
    networks:
      - osmt
    restart: always

  redis:
    image: library/redis:6.0.6
    ports:
      - "6379:6379"
    networks:
      - osmt
    restart: always

  nginx-proxy:
    restart: always
    image: jwilder/nginx-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "/etc/nginx/vhost.d"
      - "/usr/share/nginx/html"
      - "/var/run/docker.sock:/tmp/docker.sock:ro"
      - "/etc/nginx/certs:/etc/nginx/certs:rw"
    networks:
      - osmt

  letsencrypt-nginx-proxy-companion:
    restart: always
    image: jrcs/letsencrypt-nginx-proxy-companion
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    volumes_from:
      - "nginx-proxy"
    networks:
      - osmt

networks:
  osmt:
    driver: bridge
